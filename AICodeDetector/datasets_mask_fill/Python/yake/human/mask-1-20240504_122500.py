gradient rate <extra_id_0> <extra_id_1> <extra_id_2> <extra_id_3> <extra_id_4> <extra_id_5> matrices self.previous <extra_id_6> class slice return groups gradient.copy gradient class class Momentum shape class GradientDecent learning Momentum GradientDecent direction init x.shape len isinstance int self.groups average return gradient class return gradient groups def assert group weights class Shapes gradient class WeightDecay reduce the error gradient.shape gradient Adapt error opposite direction opposite reduce weight return matrices return weights class WeightDecay Slow aggregating previous multiplying gradient.shape WeightDecay assert average.shape class WeightTying Slowly regularization solutions matrices.copy self.previous self.previous moves closer WeightTying join str sum Constraint model find simpler hasattr averaging average.shape applied initial average return weight closer weights class WeightTying gradient to reduce Constraint groups initial weights average return matrices aggregating previous gradient by aggregating gradient and multiplying Adapt the weights Slowly moves shape for slice simpler solutions model to find find simpler group in groups groups of slices group in self.groups moves each weight group and hasattr find simpler solutions