movie movies similarity rating <extra_id_0> <extra_id_1> sim user <extra_id_2> indices predicted rating <extra_id_3> <extra_id_4> index <extra_id_5> <extra_id_6> similar movies number similar df.values tolist find movies len find case nearest neighbors brute knn.fit nominator df.iloc convert user dataset positive check sum nearest row number distance movie find the nearest df.copy knn metric cosine algorithm knn.kneighbors title enumerate df.index brute knn.fit convert row place copy.pop Then,even index user distance farthest movie Then,even the movie movies without ratings movies.index movies.remove distances.pop low percentage ratings by user considered ignore the rating neighbors using NearestNeighbors included similarty similarity.copy farthest range ignore m,user calculating calculation non-zero selected original rating and similarity movies by NearestNeighbors rating if len ratings are positive percentage of ratings movies is positive ratings with non-zero place the predicted original dataset calculating the predicted positive if len similarity in calculating non-zero is positive selected as similar