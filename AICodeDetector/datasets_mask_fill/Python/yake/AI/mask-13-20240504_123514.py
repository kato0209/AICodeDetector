Convolutional Layer model.add Convolutional Neural Network Layer model.add Convolutional Layer Activation def build model.add simple Convolutional Neural <extra_id_0> Layer Activation <extra_id_1> import Sequential Convolutional <extra_id_2> import Convolutional Neural cnn Dense def build <extra_id_3> <extra_id_4> num <extra_id_5> input build import tensorflow classes connected layer model.add Fourth Convolutional simple Convolutional MaxPooling Layer Output layer Flatten Fully connected layer model simple Sequential Network softmax activation connected layer Neural TensorFlow Keras model classification model.add TensorFlow Keras channels def Builds tensorflow Keras model padding pool size classification images convolutions model.add Build a CNN MaxPooling softmax Builds a simple RGB Keras Flattening the convolutions Fully connected Fourth Flattening Fully Output Summary Keras model representing input images activation for classification layer with softmax Parameters height width return model representing the CNN Returns return model.summary number representing softmax return convolutions connected dataset model representing softmax return model classes for classification images of shape dataset with images number of classes