Make predictions predictions import datasets import self.bias return np.sign sklearn import datasets datasets import matplotlib.pyplot decision boundary fig Plot decision boundary Train the SVM X.shape self.weights iters self.weights Make predictions param self.n SVM clf .bias self.weights Ensure label Gradient descent Create a grid for decision boundary rate self.lambda self.weights class LinearSVM self.weights def predict min max predictions predictions self.bias return self.lr import numpy return sklearn import datasets datasets import import matplotlib.pyplot param return np.sign sklearn import datasets datasets import import matplotlib.pyplot as plt Plot self.bias iters idx Plot decision self.bias features np.dot self.bias predictions data from sklearn import def learning lambda samples np.where samples -self.bias output ax.get _ylabel plt.show plot plt.show plot decision LinearSVM rate self.n condition boundary ax.contourf boundary Initialize X.shape Ensure Gradient Generate Train Make Plotting Create data predictions SVM grid to plot clf.predict xlim ylim Show the plot plot the decision init np.zeros main datasets.make blobs centers cluster std random state clf.fit plt.subplots ax.scatter marker np.meshgrid ax.set fit range enumerate predict np.sign clf fig numpy class parameters label descent return usage sklearn datasets matplotlib.pyplot plt grid Show np.c xx.ravel yy.ravel reshape xx.shape alpha ax.contourf plt.show